
-- TODO: Provide a little formatting system (for example, the default format below will be specified by "\dictentry{<WORD>}{}{<PRONUNCIATION>}{}{}")
module Latex where

import Data.Maybe
import Dictionary.Types
import Text.Printf

-- Default LaTeX generation -----------------------------------------------------------------------------------------------------------------------------

{-| Generates LaTeX code for a pronunciation. Currently, this just prints characters as they appear, and represents Downsteps with a down arrow. -}
generateLatexFromPronunciation :: Pronunciation -> String
generateLatexFromPronunciation [] = ""
generateLatexFromPronunciation (x:xs) = case x of 
    Mora m -> m : generateLatexFromPronunciation xs
    Yoon c -> c : generateLatexFromPronunciation xs
    Sokuon -> 'っ' : generateLatexFromPronunciation xs
    Downstep -> "\\smash{\\textdownstep}" ++ generateLatexFromPronunciation xs

{-| Generates a LaTeX "dictionary entry" including a Japanese word and its pronunciation, whose code is generated by 'generateLatexFromPronunciation'. -}
generateLatexFromNameAndPronunciation :: String -> Pronunciation -> String 
generateLatexFromNameAndPronunciation word pronunciation = printf "\\dictentry{%s}{}{%s}{}{}" word (generateLatexFromPronunciation pronunciation)

{-| Similar to 'generateLatexFromNameAndPronunciation', but takes a DictionaryEntry as input. -}
generateLatexFromDictionaryEntry :: DictionaryEntry -> String
generateLatexFromDictionaryEntry entry = generateLatexFromNameAndPronunciation (japanese entry) (fromMaybe [] (pronunciation entry))

-- Appending generated LaTeX to files -------------------------------------------------------------------------------------------------------------------

{-| Appends LaTeX code generated by 'generateLatexFromDictionaryEntry' to a given file -}
appendDictionaryEntryToLatexFile :: FilePath -> DictionaryEntry -> IO ()
appendDictionaryEntryToLatexFile path entry = appendFile path $ "\n\n" ++ generateLatexFromDictionaryEntry entry

---------------------------------------------------------------------------------------------------------------------------------------------------------
